from django.http import HttpResponse, HttpResponseForbidden
from django.shortcuts import get_object_or_404, redirect, render
from django.urls import reverse_lazy
from .models import *
from main.forms import AddPostForm, AddProductForm
from django.contrib.auth.decorators import login_required
from django.core.paginator import Paginator
from django.contrib.auth.forms import UserCreationForm
from django.views.generic import CreateView
from django.contrib.auth import authenticate, login, logout
from django.contrib import messages
from django.contrib.auth.models import User
from account.models import Profile



def index(request): #–ì–ª–∞–≤–Ω–∞—è  
    post_news = News.objects.filter(cat_id=1).order_by('-date')[:3]   
    context = {
        'post_news' : post_news,                     
        }    
    return render(request, 'main/index.html', context=context)

# --------------------------------------------------------------------------

def news(request): #–ù–æ–≤–æ—Å—Ç–∏ 
    post_news = News.objects.all().order_by('-date') 

    paginator = Paginator(post_news, 6)
    page_number = request.GET.get('page')
    page_obj = paginator.get_page(page_number)

    cats = Category.objects.all()    
    context = {
        'post_news' : post_news,
        'cats' : cats,
        'cat_selected' : 0,
        'page_obj' : page_obj
        }
    return render(request, 'main/news.html',context=context  )

def show_category(request, cat_id): #–ö–∞—Ç–µ–≥–æ—Ä–∏—è  
    post_news = News.objects.filter(cat_id=cat_id).order_by('-date') 
    cats = Category.objects.all() 

    paginator = Paginator(post_news, 6)
    page_number = request.GET.get('page')
    page_obj = paginator.get_page(page_number)

    context = {
        'post_news' : post_news,
        'cats' : cats,
        'cat_selected' : cat_id,  
        'page_obj' : page_obj      
        }

    return render(request, 'main/news.html', context=context)


def show_news(request, news_id): #–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å
    post_news = get_object_or_404(News, pk=news_id)  
    context = {
        'post_news' : post_news,                
        }
    return render(request, 'main/show_news.html', context=context)

@login_required(login_url='log')
def add(request):
    if request.method == 'POST':
        form = AddPostForm(request.POST, request.FILES)
        if form.is_valid():
            news = form.save(commit=False)
            
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if request.user.is_superuser:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                category_name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"
            else:
                # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–°—Ç—É–¥–µ–Ω—Ç"
                category_name = "–°—Ç—É–¥–µ–Ω—Ç"
            
            # –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∏
            category,categored = Category.objects.get_or_create(name=category_name)
            
            news.cat = category  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏
            news.author = request.user  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–∏
            news.save()
            return redirect('main:news')
    else:
        form = AddPostForm()
    
    context = {
        'form': form,         
        'text' : '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å üí™üí™üí™'
    }

    return render(request, 'main/add_news.html', context)

@login_required(login_url='log')
def update_news(request, news_id):
    # –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –ø–æ –µ—ë ID –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ 404, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    news = get_object_or_404(News, pk=news_id)

    # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –Ω–æ–≤–æ—Å—Ç–∏
    if news.author != request.user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è,
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        return HttpResponseForbidden("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏.")

    if request.method == 'POST':
        # –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        form = AddPostForm(request.POST, request.FILES, instance=news)
        if form.is_valid():
            news = form.save(commit=False)
            news.save()
            return redirect('main:show_news', news_id=news_id)
    else:
        # –û—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏
        form = AddPostForm(instance=news)
    
    context = {
        'form': form, 
        'news': news, 
        'text' : '–û–±–Ω–æ–≤–∏—Ç—å üí™üí™üí™'
    }

    return render(request, 'main/add_news.html', context)


@login_required(login_url='log')
def delete_news(request, news_id):
    # –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –ø–æ –µ—ë ID –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ 404, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    news = get_object_or_404(News, pk=news_id)

    # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –Ω–æ–≤–æ—Å—Ç–∏
    if news.author != request.user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è,
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        return HttpResponseForbidden("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏.")

    if request.method == 'POST':
        if request.POST.get("confirm_delete"):
              # –£–¥–∞–ª–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ
              news.delete()
              
        return redirect('account:profile')  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    
    
    return render(request, 'account/profile2.html', {'news': news})

# --------------------------------------------------------------------------

def store(request): #–ú–∞–≥–∞–∑–∏–Ω
    product = Product.objects.all().order_by('-publication_date') 

    paginator = Paginator(product, 6)
    page_number = request.GET.get('page')
    page_obj = paginator.get_page(page_number)

    cats = Category_prod.objects.all() 
    context = {
        'product' : product,
        'cats' : cats,
        'cat_selected' : 0,
        'page_obj' : page_obj
    }
    return render(request, 'main/store.html', context=context)

def show_card(request,card_id):
    card = get_object_or_404(Product, pk=card_id)
    context = {
        'card' : card,
    }
    return render(request, 'main/show_card.html', context=context)

def show_prod_category(request, cat_id):
    product = Product.objects.filter(cat_prod_id=cat_id)
    cats = Category_prod.objects.all()
    context = {
        'product' : product,
        'cats' : cats,
        'cat_selected' : cat_id,  
    }
    return render(request, 'main/store.html', context=context)

@login_required(login_url='log')
def create_product(request):
    if request.method == 'POST':
        form = AddProductForm(request.POST, request.FILES)
        if form.is_valid():
            product = form.save(commit=False)
            product.author = request.user
            product.save()
            return redirect('main:store')
    else:
        form = AddProductForm()

    context = {
        'form': form, 
        'text' : '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å üí™üí™üí™'
    }
    return render(request, 'main/add_prod.html', context)


@login_required(login_url='log')
def update_prod(request, card_id):
    # –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –µ—ë ID –∏–ª–∏ –≤–µ—Ä–Ω—ë—Ç 404, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    product = get_object_or_404(Product, pk=card_id)

    # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞
    if product.author != request.user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è,
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        return HttpResponseForbidden("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")

    if request.method == 'POST':
        # –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        form = AddProductForm(request.POST, request.FILES, instance=product)
        if form.is_valid():
            product = form.save(commit=False)
            product.save()
            return redirect('main:show_card', card_id=card_id)
    else:
        # –û—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏
        form = AddProductForm(instance=product)
    
    context = {
        'form': form, 
        'product': product, 
        'text' : '–û–±–Ω–æ–≤–∏—Ç—å üí™üí™üí™'
    }

    return render(request, 'main/add_prod.html', context)


@login_required(login_url='log')
def delete_prod(request, card_id):
    # –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –ø–æ –µ—ë ID –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ 404, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    product = get_object_or_404(Product, pk=card_id)

    # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–æ–º –Ω–æ–≤–æ—Å—Ç–∏
    if product.author != request.user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è,
        # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        return HttpResponseForbidden("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")

    if request.method == 'POST':
        if request.POST.get("confirm_delete"):
              # –£–¥–∞–ª–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ
              product.delete()
              
        return redirect('account:profile')  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    
    
    return render(request, 'account/profile2.html', {'product': product})

# --------------------------------------------------------------------------


